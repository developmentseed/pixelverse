[build-system]
build-backend = "uv_build"
requires = [ "uv-build>=0.9.1,<0.10" ]

[project]
name = "pixelverse"
version = "0.1.0"
description = "Cloud Native Tooling to generate and process pixelwise geospatial embeddings."
readme = "README.md"
authors = [
  { name = "Martha", email = "martha@developmentseed.org" },
  { name = "Isaac Corley", email = "isaac.corley@proton.me" },
]
requires-python = ">=3.13"
classifiers = [
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
]

dependencies = [
  "einops>=0.8.1",
  "numpy>=2.3.4",
  "pystac>=1.14.1",
  "torch>=2.9",
  "torchvision>=0.24",
  "xarray>=2025.10.1",
  "zarr>=3.1.3",
]

scripts.pixelverse = "pixelverse:main"

[dependency-groups]
dev = [
  "ipykernel>=7.0.1",
  "ipywidgets>=8.1.7",
  "pre-commit>=4.3",
  "pytest>=8.4.2",
  "pytest-cov>=7",
  "ruff>=0.14.1",
  "ty>=0.0.1a23",
]

[tool.ruff]
target-version = "py313"
line-length = 100
force-exclude = true

lint.select = [
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "I",   # isort
  "SIM", # flake8-simplify
  "UP",  # pyupgrade
  "W",   # pycodestyle warnings
]
lint.ignore = [
  "ANN401",
  "COM812",
  "COM819",
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "PT011",
  "PT012",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "RET505",
  "RET506",
  "RUF005",
  "SIM108",
  "TRY003",
  "W191",
]

lint.extend-per-file-ignores."tests/**" = [
  "ANN001",
  "ANN201",
  "RUF029",
  "SIM117",
  "SIM300",
]

lint.isort.known-first-party = [ "pixelverse" ]

[tool.pytest.ini_options]
testpaths = [ "tests" ]
markers = [
  "integration: marks tests as slow integration tests",
]
addopts = [
  "-m",
  "not integration",
]

[tool.semantic_release]
version_toml = [ "pyproject.toml:project.version:nf" ]
version_variables = [ "src/pixelverse/__init__.py:__version__" ]

build_command = """
curl -LsSf https://astral.sh/uv/install.sh | sh && \
export PATH=$HOME/.local/bin:$PATH && \
uv lock && \
git add uv.lock
"""

[tool.semantic_release.branches.main]
match = "main"

[tool.numpydoc_validation]
checks = [
  "GL06",
  "GL07",
  "GL10",
  "SS01",
  "SS02",
  "SS03",
  "SS04",
  "PR01",
  "PR02",
  "PR03",
  "PR04",
  "PR05",
  "PR06",
  "RT01",
  "RT02",
  "RT03",
]
